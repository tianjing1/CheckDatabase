<?xml version='1.0' encoding='UTF-8'?>
<result plugin="junit@1.20">
  <suites>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\All\common.xml</file>
      <name>common</name>
      <duration>2.797</duration>
      <timestamp>12 Jul 2017 01:59:19 GMT</timestamp>
      <time>2.797</time>
      <cases>
        <case>
          <duration>0.109</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetEmployeeProfile</className>
          <testName>test_01_有token的用户请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.087</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetEmployeeProfile</className>
          <testName>test_02_没有token的用户请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.097</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetEmployeeProfile</className>
          <testName>test_03_员工ID无效时返回空的Employee</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.225</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_01_有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.14</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_02_没有searchName字段的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.136</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_03_查询字符串为空时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.153</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_04_查询字符串为中文时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.054</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_05_查询字符串为一串拼音时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.054</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_06_查询字符串为中英混合时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.058</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_07_返回的结果中详细字段不缺少</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.073</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_08_加城市ID搜索</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.049</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.ProfessionList</className>
          <testName>test_01_有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.058</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.ProfessionList</className>
          <testName>test_02_没有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.073</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDiseasesInCategory</className>
          <testName>test_01_获取疾病_提供有效的categoryId</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.025</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDiseasesInCategory</className>
          <testName>test_02_获取疾病_提供无效的categoryId_ID不存在</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.058</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDiseasesInCategory</className>
          <testName>test_03_获取疾病_提供无效的categoryId_ID为其他字符</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\All\doctoruser.xml</file>
      <name>doctoruser</name>
      <duration>20.894</duration>
      <timestamp>12 Jul 2017 01:59:40 GMT</timestamp>
      <time>20.894</time>
      <cases>
        <case>
          <duration>0.144</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_01_有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.022</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_02_没有token信息的请求不能获得个人信息并返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.02</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_03_错误token的请求不能获得个人信息并返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.192</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_04_测试data字段返回了足够的医生信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.284</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_05_测试总订单数_测试处理中订单数_CRM未领取</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.186</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_06_测试总订单数_测试处理中订单数_CRM已领取</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>4.084</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_07_测试总订单数_测试处理中订单数_推荐完医生</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>7.397</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_08_测试总订单数_待支付状态的订单数</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.0</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_09_测试返回的地区服务专员</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.564</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_02_已登录有token的用户可以更新个人信息department</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.482</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_03_已登录有token的用户可以更新个人信息hospital_id</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.576</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_05_已登录有token的用户可以更新个人信息major_id</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.021</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_06_未登录没有token的用户不可以更新信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.021</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_07_错误token的不可以更新信息并返回正确错误码</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.124</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_08_禁止更新city_name字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>2.007</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_09_禁止更新hospital_name字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.779</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_10_禁止更新major_name字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.373</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_12_更新doctor_card_pictures字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\All\login.xml</file>
      <name>login</name>
      <duration>3.104</duration>
      <timestamp>12 Jul 2017 01:59:43 GMT</timestamp>
      <time>3.104</time>
      <cases>
        <case>
          <duration>0.005</duration>
          <className>com.mingyizhudao.qa.testcase.login.SendVerifyCode</className>
          <testName>填写正确手机号发送验证码成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.045</duration>
          <className>com.mingyizhudao.qa.testcase.login.SendVerifyCode</className>
          <testName>填写错误少于11位的手机号发送验证码失败</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.004</duration>
          <className>com.mingyizhudao.qa.testcase.login.SendVerifyCode</className>
          <testName>填写错误手机号发送验证码成功失败</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.057</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>同一手机号先请求验证码再验证应该返回token</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.005</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>手机号未发送过请求但直接进行验证应该返回错误</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.465</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>手机号非法或不符时发送验证码返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.009</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>无手机号有验证码返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.027</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>有手机号无验证码返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.302</duration>
          <className>com.mingyizhudao.qa.testcase.login.Refresh</className>
          <testName>body中的token和http头中的token不一致</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.13</duration>
          <className>com.mingyizhudao.qa.testcase.login.Refresh</className>
          <testName>刷新token后返回新的token且老token依然可用</testName>
          <skipped>false</skipped>
          <errorStackTrace>
      java.lang.AssertionError: expected [7200] but found [86400]
	at com.mingyizhudao.qa.testcase.login.Refresh.刷新token后返回新的token且老token依然可用(Refresh.java:50)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
... Removed 26 stack frames
    </errorStackTrace>
          <errorDetails>expected [7200] but found [86400]</errorDetails>
          <failedSince>10</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\All\trade.xml</file>
      <name>trade</name>
      <duration>32.527</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>32.527</time>
      <cases>
        <case>
          <duration>0.394</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_01_创建订单_信息齐备_已认证用户</testName>
          <skipped>false</skipped>
          <errorStackTrace>
      java.lang.AssertionError: expected object to not be null
	at com.mingyizhudao.qa.testcase.doctor.CreateOrder.test_01_创建订单_信息齐备_已认证用户(CreateOrder.java:94)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
... Removed 24 stack frames
    </errorStackTrace>
          <errorDetails>expected object to not be null</errorDetails>
          <failedSince>10</failedSince>
        </case>
        <case>
          <duration>0.024</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_02_创建订单_信息齐备_未登录用户</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.395</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_03_创建订单_缺少患者姓名不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.081</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_04_创建订单_缺少患者性别或性别不正确不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.053</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_05_创建订单_缺少患者年龄不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.052</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_06_创建订单_缺少患者手机不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.053</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_07_创建订单_缺少主诉疾病不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.609</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_08_创建订单_缺少次诉疾病可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>3.093</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_09_创建订单_信息齐备_认证中的医生没有邀请者不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>3.532</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_10_创建订单_信息齐备_认证中的医生有邀请者可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.106</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_11_创建订单_信息齐备_期望手术医院不传</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.428</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_01_获取订单列表_登录用户</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>4.902</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_02_获取订单列表_登录用户_订单列表会更新且按时间倒序</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.019</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_03_获取订单列表_未登录用户</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.739</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_04_获取订单列表_推荐医生后病历不展示上级医生信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>2.076</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_05_获取订单列表_三方通话成功后病历上展示上级医生信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.359</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_01_获取type1的图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.07</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_02_获取type2的图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.036</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_03_获取type3的图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.065</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_04_获取PNG文件名正常图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.074</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_05_获取GIF文件名正常图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.07</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_06_获取文件名有特殊字符图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.39</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_01_获取订单详情_提供正确的属于自己的订单ID</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.031</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_02_获取订单详情_提供正确的错误的ID_ID为非法整数</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.031</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_03_获取订单详情_提供正确的错误的ID_ID为英文</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>2.992</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_04_获取订单详情_提供不属于自己的订单ID</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.141</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_01_更新病例_主诉疾病</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.384</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_02_更新病例_次诉疾病</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.069</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_03_更新病例_患者性别</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.806</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_04_更新病例_病例描述</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.966</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_05_更新病例_更新图片</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.987</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_06_更新病例_期望手术医院</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.069</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_07_更新病例_患者姓名</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.868</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_08_更新病例_患者年龄</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\TEST-TestSuite.xml</file>
      <name>TestSuite</name>
      <duration>65.695</duration>
      <time>65.695</time>
      <cases>
        <case>
          <duration>0.11</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetEmployeeProfile</className>
          <testName>test_01_有token的用户请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.087</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetEmployeeProfile</className>
          <testName>test_02_没有token的用户请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.096</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetEmployeeProfile</className>
          <testName>test_03_员工ID无效时返回空的Employee</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.227</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_01_有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.142</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_02_没有searchName字段的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.139</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_03_查询字符串为空时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.153</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_04_查询字符串为中文时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.059</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_05_查询字符串为一串拼音时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.045</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_06_查询字符串为中英混合时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.058</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_07_返回的结果中详细字段不缺少</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.076</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_08_加城市ID搜索</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.049</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.ProfessionList</className>
          <testName>test_01_有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.058</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.ProfessionList</className>
          <testName>test_02_没有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.074</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDiseasesInCategory</className>
          <testName>test_01_获取疾病_提供有效的categoryId</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.024</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDiseasesInCategory</className>
          <testName>test_02_获取疾病_提供无效的categoryId_ID不存在</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.058</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDiseasesInCategory</className>
          <testName>test_03_获取疾病_提供无效的categoryId_ID为其他字符</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.144</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_01_有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.021</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_02_没有token信息的请求不能获得个人信息并返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.026</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_03_错误token的请求不能获得个人信息并返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.188</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_04_测试data字段返回了足够的医生信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.284</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_05_测试总订单数_测试处理中订单数_CRM未领取</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.187</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_06_测试总订单数_测试处理中订单数_CRM已领取</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>4.084</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_07_测试总订单数_测试处理中订单数_推荐完医生</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>7.398</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_08_测试总订单数_待支付状态的订单数</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.0</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_09_测试返回的地区服务专员</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.564</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_02_已登录有token的用户可以更新个人信息department</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.483</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_03_已登录有token的用户可以更新个人信息hospital_id</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.576</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_05_已登录有token的用户可以更新个人信息major_id</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.021</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_06_未登录没有token的用户不可以更新信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.021</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_07_错误token的不可以更新信息并返回正确错误码</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.125</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_08_禁止更新city_name字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>2.008</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_09_禁止更新hospital_name字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.779</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_10_禁止更新major_name字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.373</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_12_更新doctor_card_pictures字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.005</duration>
          <className>com.mingyizhudao.qa.testcase.login.SendVerifyCode</className>
          <testName>填写正确手机号发送验证码成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.045</duration>
          <className>com.mingyizhudao.qa.testcase.login.SendVerifyCode</className>
          <testName>填写错误少于11位的手机号发送验证码失败</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.003</duration>
          <className>com.mingyizhudao.qa.testcase.login.SendVerifyCode</className>
          <testName>填写错误手机号发送验证码成功失败</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.057</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>同一手机号先请求验证码再验证应该返回token</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.006</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>手机号未发送过请求但直接进行验证应该返回错误</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.465</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>手机号非法或不符时发送验证码返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.01</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>无手机号有验证码返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.028</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>有手机号无验证码返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.302</duration>
          <className>com.mingyizhudao.qa.testcase.login.Refresh</className>
          <testName>body中的token和http头中的token不一致</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.141</duration>
          <className>com.mingyizhudao.qa.testcase.login.Refresh</className>
          <testName>刷新token后返回新的token且老token依然可用</testName>
          <skipped>false</skipped>
          <errorStackTrace>java.lang.AssertionError: expected [7200] but found [86400]
	at com.mingyizhudao.qa.testcase.login.Refresh.刷新token后返回新的token且老token依然可用(Refresh.java:50)
</errorStackTrace>
          <errorDetails>expected [7200] but found [86400]</errorDetails>
          <stdout>[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 
[INFO][BaseTest] ||    TestCase END:	body中的token和http头中的token不一致
[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 

[INFO][BaseTest] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 
[INFO][BaseTest] ||    TestCase START:	刷新token后返回新的token且老token依然可用
[INFO][BaseTest] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 

[INFO][SendVerifyCode] 请求验证码到手机号13700439999 ...
[INFO][HttpRequest] 发送请求: &gt;&gt;&gt;&gt;&gt;  POST http://login.dev.myzd.info/api/login/sendVerifyCode
[INFO][HttpRequest] 请求数据: &gt;&gt;&gt;&gt;&gt;  {&quot;mobile&quot;:&quot;13700439999&quot;}
[INFO][HttpRequest] 等待回应: &lt;&lt;&lt;&lt;&lt;  200 null
[INFO][HttpRequest] 响应时间: &lt;&lt;&lt;&lt;&lt;  16 ms
[INFO][SendVerifyCode] mobile是: 13700439999...请发送验证码到服务器进行验证
[INFO][CheckVerifyCode] 发送短信验证码到服务器进行验证...
[INFO][HttpRequest] 发送请求: &gt;&gt;&gt;&gt;&gt;  POST http://login.dev.myzd.info/api/login/checkVerifyCode
[INFO][HttpRequest] 请求数据: &gt;&gt;&gt;&gt;&gt;  {&quot;mobile&quot;:&quot;13700439999&quot;,&quot;code&quot;:&quot;123456&quot;,&quot;state&quot;:&quot;test&quot;}
[INFO][HttpRequest] 等待回应: &lt;&lt;&lt;&lt;&lt;  200 null
[INFO][HttpRequest] 响应时间: &lt;&lt;&lt;&lt;&lt;  104 ms
[INFO][CheckVerifyCode] token是: eyJ0eXAiOiJKV1QiLCJzcmMiOiIiLCJhbGciOiJIUzI1NiIsInNpZCI6ImM5YzlhODRjIn0.eyJ1aWQiOiIzMjIwIiwibW9iaWxlIjoiMTM3MDA0Mzk5OTkiLCJleHAiOjE0OTk5MTExODMsImlhdCI6MTQ5OTgyNDc4M30.FKdHNaVWqjBhSRv6bYHK81fFTlx12OrUC2t-64tIkKo
[INFO][HttpRequest] 发送请求: &gt;&gt;&gt;&gt;&gt;  POST http://login.dev.myzd.info/api/login/refresh
[INFO][HttpRequest] 请求数据: &gt;&gt;&gt;&gt;&gt;  {&quot;token&quot;:&quot;eyJ0eXAiOiJKV1QiLCJzcmMiOiIiLCJhbGciOiJIUzI1NiIsInNpZCI6ImM5YzlhODRjIn0.eyJ1aWQiOiIzMjIwIiwibW9iaWxlIjoiMTM3MDA0Mzk5OTkiLCJleHAiOjE0OTk5MTExODMsImlhdCI6MTQ5OTgyNDc4M30.FKdHNaVWqjBhSRv6bYHK81fFTlx12OrUC2t-64tIkKo&quot;}
[INFO][HttpRequest] 等待回应: &lt;&lt;&lt;&lt;&lt;  200 null
[INFO][HttpRequest] 响应时间: &lt;&lt;&lt;&lt;&lt;  3 ms
[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt; [ code ]:	1000000
[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt; [ message ]:	success
[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt; [ data ]:	{&quot;token&quot;:&quot;eyJ0eXAiOiJKV1QiLCJzcmMiOiIiLCJhbGciOiJIUzI1NiIsInNpZCI6ImM5YzlhODRjIn0.eyJ1aWQiOiIzMjIwIiwibW9iaWxlIjoiMTM3MDA0Mzk5OTkiLCJleHAiOjE0OTk5MTExODMsImlhdCI6MTQ5OTgyNDc4M30.FKdHNaVWqjBhSRv6bYHK81fFTlx12OrUC2t-64tIkKo&quot;,&quot;expire&quot;:86400}
</stdout>
          <failedSince>10</failedSince>
        </case>
        <case>
          <duration>0.394</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_01_创建订单_信息齐备_已认证用户</testName>
          <skipped>false</skipped>
          <errorStackTrace>java.lang.AssertionError: expected object to not be null
	at com.mingyizhudao.qa.testcase.doctor.CreateOrder.test_01_创建订单_信息齐备_已认证用户(CreateOrder.java:94)
</errorStackTrace>
          <errorDetails>expected object to not be null</errorDetails>
          <stdout>[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 
[INFO][BaseTest] ||    TestCase END:	刷新token后返回新的token且老token依然可用
[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 

[INFO][BaseTest] Test Cleaning...
[INFO][BaseTest] mainDoctorId为3217
[INFO][BaseTest] 恢复医生信息：
[INFO][HttpRequest] 发送请求: &gt;&gt;&gt;&gt;&gt;  POST http://services.dev.myzd.info/doctor/api/updatedoctorprofile
[INFO][HttpRequest] 请求数据: &gt;&gt;&gt;&gt;&gt;  {&quot;doctor&quot;:{&quot;name&quot;:&quot;庄恕eN&quot;,&quot;department&quot;:&quot;胸外科&quot;,&quot;major_id&quot;:&quot;24&quot;,&quot;academic_title_list&quot;:&quot;NONE&quot;,&quot;medical_title_list&quot;:&quot;CHIEF_NURSE&quot;,&quot;hospital_id&quot;:&quot;26084&quot;,&quot;inviter_no&quot;:&quot;SH0031&quot;}}
[INFO][HttpRequest] 等待回应: &lt;&lt;&lt;&lt;&lt;  200 OK
[INFO][HttpRequest] 响应时间: &lt;&lt;&lt;&lt;&lt;  403 ms
[INFO][UpdateDoctorProfile] 更新医生信息成功
[INFO][BaseTest] ============================================================================================================= 
[INFO][BaseTest] ||    TestAPI END:	Refresh
[INFO][BaseTest] ============================================================================================================= 

[INFO][BaseTest] ///////////////////////////////////////////////////////////////////////////////////////////////////////////// 
[INFO][BaseTest] //    TestAPI START:	CreateOrder
[INFO][BaseTest] ///////////////////////////////////////////////////////////////////////////////////////////////////////////// 

[INFO][BaseTest] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 
[INFO][BaseTest] ||    TestCase START:	test_01_创建订单_信息齐备_已认证用户
[INFO][BaseTest] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 

[INFO][HttpRequest] 发送请求: &gt;&gt;&gt;&gt;&gt;  POST http://services.dev.myzd.info/doctor/api/createorder
[INFO][HttpRequest] 请求数据: &gt;&gt;&gt;&gt;&gt;  {&quot;order&quot;:{&quot;patient_name&quot;:&quot;辣妹XFnI&quot;,&quot;patient_gender&quot;:&quot;1&quot;,&quot;patient_age&quot;:&quot;82&quot;,&quot;patient_phone&quot;:&quot;13609449999&quot;,&quot;major_disease_id&quot;:&quot;3014&quot;,&quot;minor_disease_id&quot;:&quot;3786&quot;,&quot;diagnosis&quot;:&quot;病情描述omIWcnUbOUkGLdvUytGEJtJjfoKNDHQJfiiTsADtduVEOAvPYFQoJLrWnnKcvNSQjjgktAuNPuDJgKBLEdxSvmXfXfwFGULWvqfl&quot;,&quot;is_reoperation&quot;:1,&quot;reoperation_description&quot;:&quot;二次手术描述xqjLfHZiFbonitQoveMnsZyUjijyRDCNLcxKnkEoqYovSVBgmzKvenhuRypSgmvGEmAAkwrLCNbGfgFKwiNXNUXENueYCwgrmuJE&quot;,&quot;expected_doctor_id&quot;:&quot;6884&quot;,&quot;expected_surgery_start_date&quot;:&quot;2017/07/18&quot;,&quot;expected_surgery_due_date&quot;:&quot;2017/07/20&quot;,&quot;expected_surgery_hospital_id&quot;:&quot;6916&quot;,&quot;medical_record_pictures&quot;:[{&quot;key&quot;:&quot;2017/05/04/1265834e-97d8-44a0-95e7-047c7facaee8/IMG_20170429_102737.jpg&quot;,&quot;type&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;2017/05/04/1315bbe0-2836-4776-8216-ec55044f32dd/IMG_20161013_172442.jpg&quot;,&quot;type&quot;:&quot;1&quot;}]}}
[INFO][HttpRequest] 等待回应: &lt;&lt;&lt;&lt;&lt;  200 OK
[INFO][HttpRequest] 响应时间: &lt;&lt;&lt;&lt;&lt;  315 ms
[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt; [ code ]:	1000000
[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt; [ message ]:	成功
[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt; [ data ]:	{&quot;id&quot;:9865,&quot;order_number&quot;:1019310723,&quot;type&quot;:1,&quot;status&quot;:1000,&quot;patient_name&quot;:&quot;辣妹XFnI&quot;,&quot;patient_age&quot;:82,&quot;patient_gender&quot;:1,&quot;patient_phone&quot;:&quot;13609449999&quot;,&quot;major_disease_id&quot;:3014,&quot;major_disease_name&quot;:&quot;咽鼓管异常开放&quot;,&quot;minor_disease_id&quot;:3786,&quot;minor_disease_name&quot;:&quot;补牙&quot;,&quot;diagnosis&quot;:&quot;病情描述omIWcnUbOUkGLdvUytGEJtJjfoKNDHQJfiiTsADtduVEOAvPYFQoJLrWnnKcvNSQjjgktAuNPuDJgKBLEdxSvmXfXfwFGULWvqfl&quot;,&quot;expected_doctor_id&quot;:6884,&quot;expected_doctor_name&quot;:&quot;钟西北DQ&quot;,&quot;expected_surgery_start_date&quot;:&quot;2017-07-18&quot;,&quot;expected_surgery_due_date&quot;:&quot;2017-07-20&quot;,&quot;expected_surgery_hospital_id&quot;:6916,&quot;expected_surgery_hospital_name&quot;:&quot;郑州铝厂职工医院&quot;,&quot;is_reoperation&quot;:true,&quot;reoperation_description&quot;:&quot;二次手术描述xqjLfHZiFbonitQoveMnsZyUjijyRDCNLcxKnkEoqYovSVBgmzKvenhuRypSgmvGEmAAkwrLCNbGfgFKwiNXNUXENueYCwgrmuJE&quot;,&quot;agent_id&quot;:3217,&quot;agent_name&quot;:&quot;庄恕eN&quot;,&quot;agent_phone&quot;:&quot;13519939999&quot;,&quot;agent_medical_title&quot;:&quot;CHIEF_NURSE&quot;,&quot;agent_academic_title&quot;:&quot;NONE&quot;,&quot;agent_major&quot;:&quot;四肢损伤&quot;,&quot;agent_city_id&quot;:500100,&quot;agent_city_name&quot;:&quot;重庆&quot;,&quot;agent_province_id&quot;:500000,&quot;agent_province_name&quot;:&quot;重庆&quot;,&quot;agent_hospital&quot;:&quot;江津市精神病医院&quot;,&quot;agent_department&quot;:&quot;胸外科&quot;,&quot;agent_contact_id&quot;:&quot;SH0031&quot;,&quot;agent_registration_time&quot;:&quot;2017-07-12T01:59:43.800Z&quot;,&quot;deposit_payment_id&quot;:0,&quot;outcome_payment_id&quot;:0,&quot;is_test&quot;:false,&quot;created_at&quot;:&quot;2017-07-12 09:59:44&quot;,&quot;modified_at&quot;:&quot;2017-07-12T01:59:44.025Z&quot;,&quot;medical_record_pictures&quot;:[{&quot;type&quot;:&quot;1&quot;,&quot;key&quot;:&quot;2017/05/04/1265834e-97d8-44a0-95e7-047c7facaee8/IMG_20170429_102737.jpg&quot;},{&quot;type&quot;:&quot;1&quot;,&quot;key&quot;:&quot;2017/05/04/1315bbe0-2836-4776-8216-ec55044f32dd/IMG_20161013_172442.jpg&quot;}]}
[INFO][CreateOrder] 查看刚刚创建的订单详情
[INFO][HttpRequest] 发送请求: &gt;&gt;&gt;&gt;&gt;  GET http://services.dev.myzd.info/doctor/api/getorderdetail/1019310723
[INFO][HttpRequest] 请求数据: &gt;&gt;&gt;&gt;&gt;  
[INFO][HttpRequest] 等待回应: &lt;&lt;&lt;&lt;&lt;  200 OK
[INFO][HttpRequest] 响应时间: &lt;&lt;&lt;&lt;&lt;  70 ms
[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt; [ code ]:	1000000
[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt; [ message ]:	成功
[INFO][BaseTest] &lt;&lt;&lt;&lt;&lt;&lt; [ data ]:	{&quot;order&quot;:{&quot;id&quot;:9865,&quot;order_number&quot;:1019310723,&quot;type&quot;:1,&quot;status&quot;:1000,&quot;patient_name&quot;:&quot;辣妹XFnI&quot;,&quot;patient_age&quot;:82,&quot;patient_gender&quot;:1,&quot;patient_phone&quot;:&quot;13609449999&quot;,&quot;major_disease_id&quot;:3014,&quot;major_disease_name&quot;:&quot;咽鼓管异常开放&quot;,&quot;minor_disease_id&quot;:3786,&quot;minor_disease_name&quot;:&quot;补牙&quot;,&quot;diagnosis&quot;:&quot;病情描述omIWcnUbOUkGLdvUytGEJtJjfoKNDHQJfiiTsADtduVEOAvPYFQoJLrWnnKcvNSQjjgktAuNPuDJgKBLEdxSvmXfXfwFGULWvqfl&quot;,&quot;expected_doctor_id&quot;:6884,&quot;expected_doctor_name&quot;:&quot;钟西北DQ&quot;,&quot;expected_surgery_start_date&quot;:&quot;2017/07/18&quot;,&quot;expected_surgery_due_date&quot;:&quot;2017/07/20&quot;,&quot;expected_surgery_hospital_id&quot;:6916,&quot;expected_surgery_hospital_name&quot;:&quot;郑州铝厂职工医院&quot;,&quot;is_reoperation&quot;:true,&quot;reoperation_description&quot;:&quot;二次手术描述xqjLfHZiFbonitQoveMnsZyUjijyRDCNLcxKnkEoqYovSVBgmzKvenhuRypSgmvGEmAAkwrLCNbGfgFKwiNXNUXENueYCwgrmuJE&quot;,&quot;agent_id&quot;:3217,&quot;agent_name&quot;:&quot;庄恕eN&quot;,&quot;agent_phone&quot;:&quot;13519939999&quot;,&quot;agent_medical_title&quot;:&quot;CHIEF_NURSE&quot;,&quot;agent_academic_title&quot;:&quot;NONE&quot;,&quot;agent_major&quot;:&quot;四肢损伤&quot;,&quot;agent_city_id&quot;:500100,&quot;agent_city_name&quot;:&quot;重庆&quot;,&quot;agent_province_id&quot;:500000,&quot;agent_province_name&quot;:&quot;重庆&quot;,&quot;agent_hospital&quot;:&quot;江津市精神病医院&quot;,&quot;agent_department&quot;:&quot;胸外科&quot;,&quot;agent_contact_id&quot;:&quot;SH0031&quot;,&quot;agent_registration_time&quot;:&quot;2017-07-12T01:59:44.000Z&quot;,&quot;deposit_payment_id&quot;:0,&quot;outcome_payment_id&quot;:0,&quot;is_test&quot;:false,&quot;created_at&quot;:&quot;2017/07/12 09:59:44&quot;,&quot;modified_at&quot;:&quot;2017/07/12 09:59:44&quot;,&quot;medical_record_pictures&quot;:[{&quot;url&quot;:&quot;https://assets.dev.myzd.info/2017/05/04/1265834e-97d8-44a0-95e7-047c7facaee8/IMG_20170429_102737.jpg?imageMogr2/auto-orient/format/jpg/size-limit/204800&amp;e=1499825084&amp;token=4c4YlZcZVO3lqGki56RfXXGfhnxemhbeUXrCoFxO:i1YMQNz3_6TAPtdxCu7ZTP0Lo2g=&quot;,&quot;larage_url&quot;:&quot;https://assets.dev.myzd.info/2017/05/04/1265834e-97d8-44a0-95e7-047c7facaee8/IMG_20170429_102737.jpg?imageMogr2/auto-orient/format/jpg/interlace/1&amp;e=1499825084&amp;token=4c4YlZcZVO3lqGki56RfXXGfhnxemhbeUXrCoFxO:aD9D7fonyapKHGbePr7LeWY_tj4=&quot;,&quot;type&quot;:&quot;1&quot;,&quot;key&quot;:&quot;2017/05/04/1265834e-97d8-44a0-95e7-047c7facaee8/IMG_20170429_102737.jpg&quot;},{&quot;url&quot;:&quot;https://assets.dev.myzd.info/2017/05/04/1315bbe0-2836-4776-8216-ec55044f32dd/IMG_20161013_172442.jpg?imageMogr2/auto-orient/format/jpg/size-limit/204800&amp;e=1499825084&amp;token=4c4YlZcZVO3lqGki56RfXXGfhnxemhbeUXrCoFxO:Qjgni6TAu5Y1iDUiOLFkzj0w5zw=&quot;,&quot;larage_url&quot;:&quot;https://assets.dev.myzd.info/2017/05/04/1315bbe0-2836-4776-8216-ec55044f32dd/IMG_20161013_172442.jpg?imageMogr2/auto-orient/format/jpg/interlace/1&amp;e=1499825084&amp;token=4c4YlZcZVO3lqGki56RfXXGfhnxemhbeUXrCoFxO:tEIXvbpePftkh9UmcbdHnE3_FC4=&quot;,&quot;type&quot;:&quot;1&quot;,&quot;key&quot;:&quot;2017/05/04/1315bbe0-2836-4776-8216-ec55044f32dd/IMG_20161013_172442.jpg&quot;}],&quot;surgeon_recommended_time&quot;:&quot;&quot;,&quot;OrderStatusText&quot;:&quot;待处理&quot;,&quot;surgeon_fee&quot;:&quot;&quot;,&quot;surgeon_id&quot;:&quot;&quot;,&quot;surgeon_name&quot;:&quot;&quot;,&quot;surgeon_medical_title&quot;:&quot;&quot;,&quot;surgeon_academic_title&quot;:&quot;&quot;,&quot;surgeon_hospital&quot;:&quot;&quot;,&quot;surgeon_department&quot;:&quot;&quot;}}
[INFO][UT] medical_record_pictures的长度为: 2
</stdout>
          <failedSince>10</failedSince>
        </case>
        <case>
          <duration>0.024</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_02_创建订单_信息齐备_未登录用户</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.395</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_03_创建订单_缺少患者姓名不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.081</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_04_创建订单_缺少患者性别或性别不正确不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.053</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_05_创建订单_缺少患者年龄不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.052</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_06_创建订单_缺少患者手机不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.053</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_07_创建订单_缺少主诉疾病不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.609</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_08_创建订单_缺少次诉疾病可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>3.093</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_09_创建订单_信息齐备_认证中的医生没有邀请者不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>3.536</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_10_创建订单_信息齐备_认证中的医生有邀请者可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.103</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_11_创建订单_信息齐备_期望手术医院不传</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.432</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_01_获取订单列表_登录用户</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>4.898</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_02_获取订单列表_登录用户_订单列表会更新且按时间倒序</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.02</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_03_获取订单列表_未登录用户</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.74</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_04_获取订单列表_推荐医生后病历不展示上级医生信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>2.077</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_05_获取订单列表_三方通话成功后病历上展示上级医生信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.359</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_01_获取type1的图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.07</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_02_获取type2的图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.036</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_03_获取type3的图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.066</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_04_获取PNG文件名正常图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.074</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_05_获取GIF文件名正常图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.07</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_06_获取文件名有特殊字符图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.39</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_01_获取订单详情_提供正确的属于自己的订单ID</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.031</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_02_获取订单详情_提供正确的错误的ID_ID为非法整数</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.031</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_03_获取订单详情_提供正确的错误的ID_ID为英文</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>2.993</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_04_获取订单详情_提供不属于自己的订单ID</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.141</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_01_更新病例_主诉疾病</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.385</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_02_更新病例_次诉疾病</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.069</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_03_更新病例_患者性别</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.805</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_04_更新病例_病例描述</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.966</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_05_更新病例_更新图片</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.986</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_06_更新病例_期望手术医院</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.069</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_07_更新病例_患者姓名</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.868</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_08_更新病例_患者年龄</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.doctor.CreateOrder.xml</file>
      <name>com.mingyizhudao.qa.testcase.doctor.CreateOrder</name>
      <duration>9.4</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>9.400</time>
      <cases>
        <case>
          <duration>3.533</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_10_创建订单_信息齐备_认证中的医生有邀请者可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.396</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_03_创建订单_缺少患者姓名不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.081</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_04_创建订单_缺少患者性别或性别不正确不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.054</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_05_创建订单_缺少患者年龄不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.024</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_02_创建订单_信息齐备_未登录用户</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.108</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_11_创建订单_信息齐备_期望手术医院不传</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.395</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_01_创建订单_信息齐备_已认证用户</testName>
          <skipped>false</skipped>
          <errorStackTrace>
      java.lang.AssertionError: expected object to not be null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.assertNotNull(Assert.java:404)
	at org.testng.Assert.assertNotNull(Assert.java:389)
	at com.mingyizhudao.qa.testcase.doctor.CreateOrder.test_01_创建订单_信息齐备_已认证用户(CreateOrder.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)

    </errorStackTrace>
          <errorDetails>expected object to not be null</errorDetails>
          <failedSince>10</failedSince>
        </case>
        <case>
          <duration>0.052</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_06_创建订单_缺少患者手机不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>3.094</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_09_创建订单_信息齐备_认证中的医生没有邀请者不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.053</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_07_创建订单_缺少主诉疾病不可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.61</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.CreateOrder</className>
          <testName>test_08_创建订单_缺少次诉疾病可以创建</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.doctor.GetDiseasesInCategory.xml</file>
      <name>com.mingyizhudao.qa.testcase.doctor.GetDiseasesInCategory</name>
      <duration>0.16</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>0.160</time>
      <cases>
        <case>
          <duration>0.059</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDiseasesInCategory</className>
          <testName>test_03_获取疾病_提供无效的categoryId_ID为其他字符</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.074</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDiseasesInCategory</className>
          <testName>test_01_获取疾病_提供有效的categoryId</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.027</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDiseasesInCategory</className>
          <testName>test_02_获取疾病_提供无效的categoryId_ID不存在</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile.xml</file>
      <name>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</name>
      <duration>14.336</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>14.336</time>
      <cases>
        <case>
          <duration>0.021</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_03_错误token的请求不能获得个人信息并返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.022</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_02_没有token信息的请求不能获得个人信息并返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.193</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_04_测试data字段返回了足够的医生信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.187</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_06_测试总订单数_测试处理中订单数_CRM已领取</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>7.397</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_08_测试总订单数_待支付状态的订单数</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.001</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_09_测试返回的地区服务专员</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.145</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_01_有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.286</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_05_测试总订单数_测试处理中订单数_CRM未领取</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>4.084</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetDoctorProfile</className>
          <testName>test_07_测试总订单数_测试处理中订单数_推荐完医生</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.doctor.GetEmployeeProfile.xml</file>
      <name>com.mingyizhudao.qa.testcase.doctor.GetEmployeeProfile</name>
      <duration>0.297</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>0.297</time>
      <cases>
        <case>
          <duration>0.11</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetEmployeeProfile</className>
          <testName>test_01_有token的用户请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.089</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetEmployeeProfile</className>
          <testName>test_02_没有token的用户请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.098</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetEmployeeProfile</className>
          <testName>test_03_员工ID无效时返回空的Employee</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.doctor.GetOrderDetail.xml</file>
      <name>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</name>
      <duration>3.445</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>3.445</time>
      <cases>
        <case>
          <duration>0.031</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_02_获取订单详情_提供正确的错误的ID_ID为非法整数</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.031</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_03_获取订单详情_提供正确的错误的ID_ID为英文</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.39</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_01_获取订单详情_提供正确的属于自己的订单ID</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>2.993</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderDetail</className>
          <testName>test_04_获取订单详情_提供不属于自己的订单ID</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.doctor.GetOrderList.xml</file>
      <name>com.mingyizhudao.qa.testcase.doctor.GetOrderList</name>
      <duration>9.167</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>9.167</time>
      <cases>
        <case>
          <duration>1.739</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_04_获取订单列表_推荐医生后病历不展示上级医生信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>4.904</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_02_获取订单列表_登录用户_订单列表会更新且按时间倒序</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.02</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_03_获取订单列表_未登录用户</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.428</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_01_获取订单列表_登录用户</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>2.076</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetOrderList</className>
          <testName>test_05_获取订单列表_三方通话成功后病历上展示上级医生信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.doctor.GetUploadToken.xml</file>
      <name>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</name>
      <duration>0.678</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>0.678</time>
      <cases>
        <case>
          <duration>0.071</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_06_获取文件名有特殊字符图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.359</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_01_获取type1的图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.074</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_05_获取GIF文件名正常图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.067</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_04_获取PNG文件名正常图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.037</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_03_获取type3的图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.07</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.GetUploadToken</className>
          <testName>test_02_获取type2的图片token_成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.doctor.HospitalSearch.xml</file>
      <name>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</name>
      <duration>0.901</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>0.901</time>
      <cases>
        <case>
          <duration>0.074</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_08_加城市ID搜索</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.054</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_06_查询字符串为中英混合时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.055</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_05_查询字符串为一串拼音时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.138</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_03_查询字符串为空时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.154</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_04_查询字符串为中文时的返回结果</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.226</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_01_有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.141</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_02_没有searchName字段的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.059</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.HospitalSearch</className>
          <testName>test_07_返回的结果中详细字段不缺少</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.doctor.ProfessionList.xml</file>
      <name>com.mingyizhudao.qa.testcase.doctor.ProfessionList</name>
      <duration>0.107</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>0.107</time>
      <cases>
        <case>
          <duration>0.049</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.ProfessionList</className>
          <testName>test_01_有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.058</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.ProfessionList</className>
          <testName>test_02_没有token信息的请求可以获得有效信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile.xml</file>
      <name>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</name>
      <duration>5.957</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>5.957</time>
      <cases>
        <case>
          <duration>0.482</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_03_已登录有token的用户可以更新个人信息hospital_id</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.565</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_02_已登录有token的用户可以更新个人信息department</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.577</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_05_已登录有token的用户可以更新个人信息major_id</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.023</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_06_未登录没有token的用户不可以更新信息</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.373</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_12_更新doctor_card_pictures字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>2.008</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_09_禁止更新hospital_name字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.126</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_08_禁止更新city_name字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.022</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_07_错误token的不可以更新信息并返回正确错误码</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.781</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateDoctorProfile</className>
          <testName>test_10_禁止更新major_name字段</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords.xml</file>
      <name>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</name>
      <duration>8.299</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>8.299</time>
      <cases>
        <case>
          <duration>0.989</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_06_更新病例_期望手术医院</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.806</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_04_更新病例_病例描述</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.069</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_07_更新病例_患者姓名</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.869</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_08_更新病例_患者年龄</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.142</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_01_更新病例_主诉疾病</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.968</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_05_更新病例_更新图片</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.386</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_02_更新病例_次诉疾病</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.07</duration>
          <className>com.mingyizhudao.qa.testcase.doctor.UpdateMedicalRecords</className>
          <testName>test_03_更新病例_患者性别</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.login.CheckVerifyCode.xml</file>
      <name>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</name>
      <duration>1.568</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>1.568</time>
      <cases>
        <case>
          <duration>0.058</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>同一手机号先请求验证码再验证应该返回token</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.01</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>无手机号有验证码返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.027</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>有手机号无验证码返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>1.467</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>手机号非法或不符时发送验证码返回正确的错误提示</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.006</duration>
          <className>com.mingyizhudao.qa.testcase.login.CheckVerifyCode</className>
          <testName>手机号未发送过请求但直接进行验证应该返回错误</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.login.Refresh.xml</file>
      <name>com.mingyizhudao.qa.testcase.login.Refresh</name>
      <duration>0.441</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>0.441</time>
      <cases>
        <case>
          <duration>0.132</duration>
          <className>com.mingyizhudao.qa.testcase.login.Refresh</className>
          <testName>刷新token后返回新的token且老token依然可用</testName>
          <skipped>false</skipped>
          <errorStackTrace>
      java.lang.AssertionError: expected [7200] but found [86400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.mingyizhudao.qa.testcase.login.Refresh.刷新token后返回新的token且老token依然可用(Refresh.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)

    </errorStackTrace>
          <errorDetails>expected [7200] but found [86400]</errorDetails>
          <failedSince>10</failedSince>
        </case>
        <case>
          <duration>0.309</duration>
          <className>com.mingyizhudao.qa.testcase.login.Refresh</className>
          <testName>body中的token和http头中的token不一致</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
    <suite>
      <file>C:\Program Files (x86)\Jenkins\workspace\TestJob\target\surefire-reports\junitreports\TEST-com.mingyizhudao.qa.testcase.login.SendVerifyCode.xml</file>
      <name>com.mingyizhudao.qa.testcase.login.SendVerifyCode</name>
      <duration>0.056</duration>
      <timestamp>12 Jul 2017 02:00:16 GMT</timestamp>
      <time>0.056</time>
      <cases>
        <case>
          <duration>0.046</duration>
          <className>com.mingyizhudao.qa.testcase.login.SendVerifyCode</className>
          <testName>填写错误少于11位的手机号发送验证码失败</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.006</duration>
          <className>com.mingyizhudao.qa.testcase.login.SendVerifyCode</className>
          <testName>填写正确手机号发送验证码成功</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
        <case>
          <duration>0.004</duration>
          <className>com.mingyizhudao.qa.testcase.login.SendVerifyCode</className>
          <testName>填写错误手机号发送验证码成功失败</testName>
          <skipped>false</skipped>
          <failedSince>0</failedSince>
        </case>
      </cases>
    </suite>
  </suites>
  <duration>179.82896</duration>
  <keepLongStdio>false</keepLongStdio>
</result>